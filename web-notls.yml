- name: Configure webserver ningx
  hosts: vagrant1
  vars:
    key_file: /etc/nginx/ssl/nginx.key
    cert_file: /etc/nginx/ssl/nginx.crt
    conf_file: /etc/nginx/sites-available/default
    server_name: localhost
    rbenv_repo: https://github.com/rbenv/rbenv.git
    ruby_build_repo: https://github.com/rbenv/ruby-build.git
  tasks:
    - name: printout ruby
      shell: "rbenv versions"
      register: which_gem

    - name: printout ruby
      debug:
        msg: "{{ ansible_env.HOME }}"

    - name: install rbenv with apt
      become: yes
      apt:
        name: rbenv
        update_cache: yes

    - name: install git
      become: yes
      apt:
        name: git
        update_cache: yes
        cache_valid_time: 3600

    - name: clone rbenv repository
      git:
        repo: "{{ rbenv_repo }}"
        dest: "{{ rbenv_root }}"

    - name: clone ruby-build repository
      git:
        repo: "{{ ruby_build_repo }}"
        dest: "{{ ruby_build_root }}"

    - name: copy .bashrc
      copy:
        src: files/.bashrc
        dest: "{{ bashrc }}"

    - name: source .bashrc
      shell: ". {{ bashrc }}"

    - name: prepare to install ruby, libssl-dev
      become: yes
      apt:
        name: libssl-dev
        update_cache: yes
        cache_valid_time: 3600

    - name: prepare to install ruby, libreadline-dev
      become: yes
      apt:
        name: libreadline-dev
        update_cache: yes
        cache_valid_time: 3600

    - name: prepare to install ruby, zlib1g-dev
      become: yes
      apt:
        name: zlib1g-dev
        update_cache: yes
        cache_valid_time: 3600

    - name: check installed ruby which rbenv
      shell: "rbenv versions"
      register: rbenv_versions
      changed_when: false

    - name: install ruby {{ ruby_version }}
      shell: "rbenv install {{ ruby_version}}"
      when: rbenv_versions.stdout.find( "{{ ruby_version }}" ) == -1


    - name: use ruby {{ ruby_version }}(1/2)
      shell: "rbenv global {{ ruby_version}}"

    - name: use ruby {{ ruby_version }}(2/2)
      shell: "rbenv rehash {{ ruby_version}}"

    - name: install bundler
      gem:
        name: bundler

    - name: install nginx
      become: yes
      apt:
        name: nginx
        update_cache: yes
        cache_valid_time: 3600

    - name: create directories for ssl certificates
      file:
        path: /etc/nginx/ssl
        state: directory

    - name: copy TLS key
      become: yes
      copy:
        src: files/nginx.key
        dest: "{{ key_file }}"
        owner: root
        mode: 0600
      notify: restart nginx

    - name: copy TLS certificate
      become: yes
      copy:
        src: files/nginx.crt
        dest: "{{ cert_file }}"
      notify: restart nginx

    - name: copy nginx config file
      become: yes
      template:
        src: templates/nginx.conf.j2
        dest: "{{ conf_file }}"
      notify: restart nginx

    - name: enable configuration
      become: yes
      file:
        dest: /etc/nginx/sites-enabled/default
        src: "{{ conf_file }}"
        state: link
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: 0644

  handlers:
    - name: restart nginx
      become: yes
      service:
       name: nginx
       state: restarted

